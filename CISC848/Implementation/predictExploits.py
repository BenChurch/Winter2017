# This program reads in parameters from .csv files and computes exploit prediction performance metrics from ExploitedIdsVectors.csv and UnexploitedIdsVectors.csv data

import csv
import vectors2metrics as v2m

PredictionThreshold = 7

OriginalParameters = [0.395, 0.646, 1.0, 0.35, 0.61, 0.71, 0.45, 0.56, 0.704, 0, 0.275, 0.66, 0, 0.275, 0.66, 0, 0.275, 0.66]

DataDir = './/Data//'
ExploitedData = 'ExploitedIdsVectors.csv'
UnexploitedData = 'UnexploitedIdsVectors.csv'

FmeasureParameterData = 'fMeasureParameters.csv'
RrParameterData = 'RrParameters.csv'

ResultsFile = 'PredictionResults.csv'

FmeasureParameters = []
RrParameters = []

def ReadInParameters():
  with open(FmeasureParameterData, 'r') as file:
    ParamReader = csv.reader(file)
    for line in ParamReader:
      for Param in line:
        FmeasureParameters.append(float(Param))
  with open(RrParameterData, 'r') as file:
    ParamReader = csv.reader(file)
    for line in ParamReader:
      for Param in line:
        RrParameters.append(float(Param))
        
def WritePredictionResults():
  OriginalConfusion = v2m.PredictExploits(Unexpl, Expl, OriginalParameters, PredictionThreshold)
  OriginalIccs = v2m.ComputeICC(OriginalParameters, Unexpl, Expl)
  OriginalRiskReduction = (OriginalConfusion[0][0] / (OriginalConfusion[0][0] + OriginalConfusion[0][1])) - (OriginalConfusion[1][0] / (OriginalConfusion[1][0] + OriginalConfusion[1][1]))
  
  FmeasureConfusion = v2m.PredictExploits(Unexpl, Expl, FmeasureParameters, PredictionThreshold)
  FmeasureIccs = v2m.ComputeICC(FmeasureParameters, Unexpl, Expl)
  FmeasureRiskReduction = (FmeasureConfusion[0][0] / (FmeasureConfusion[0][0] + FmeasureConfusion[0][1])) - (FmeasureConfusion[1][0] / (FmeasureConfusion[1][0] + FmeasureConfusion[1][1]))
  
  """
  IccConfusion = v2m.PredictExploits(Unexpl, Expl, IccParameters, PredictionThreshold)
  IccIccs = v2m.ComputeICC(IccParameters, Unexpl, Expl)
  IccRiskReduction = (IccConfusion[0][0] / (IccConfusion[0][0] + IccConfusion[0][1])) - (IccConfusion[1][0] / (IccConfusion[1][0] + IccConfusion[1][1]))
  """
  
  RrConfusion = v2m.PredictExploits(Unexpl, Expl, RrParameters, PredictionThreshold)
  RrIccs = v2m.ComputeICC(RrParameters, Unexpl, Expl)
  RrRiskReduction = (RrConfusion[0][0] / (RrConfusion[0][0] + RrConfusion[0][1])) - (RrConfusion[1][0] / (RrConfusion[1][0] + RrConfusion[1][1]))
  
  with open(ResultsFile, 'w', newline='') as file:
    csvWriter = csv.writer(file)
    csvWriter.writerow(['Equation version', 'Confusion matrix', 'Risk reduction', 'Sensitivity', 'Precision', 'Unexpl ICC', 'Expl ICC'])
    csvWriter.writerow(['Original', OriginalConfusion, OriginalRiskReduction, v2m.ComputeSensitivity(OriginalConfusion), v2m.ComputePrecision(OriginalConfusion), OriginalIccs[0], OriginalIccs[1]])
    csvWriter.writerow(['RR optimized', RrConfusion, RrRiskReduction, v2m.ComputeSensitivity(RrConfusion), v2m.ComputePrecision(RrConfusion), RrIccs[0], RrIccs[1]])
    csvWriter.writerow(['F-measure optimized', FmeasureConfusion, FmeasureRiskReduction, v2m.ComputeSensitivity(FmeasureConfusion), v2m.ComputePrecision(FmeasureConfusion), FmeasureIccs[0], FmeasureIccs[1]])
        
ReadInParameters()
(Unexpl, Expl) = v2m.ReadInData()
WritePredictionResults()